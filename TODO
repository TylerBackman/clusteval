Implement my two alternatives.
	Ramey2

Implement a 'mapply' statement or something similar to process all of Hennig's methods on the grid.


Implement everything for one data set.
	Use a very small q to check everything. (q = 30)
After that, it should just be copy and paste except for changing the data.
	Use a common number of selected variables that is small enough to keep this reasonable in runtime (200)?

Try the Landon, Ramey1, and Ramey2 methods 'with_replacement = TRUE'.
	If there's time, how do things change if FALSE?





Add bootstrap_type argument to clustomit_landon
	Should be in: c("nonparametric, parametric")
	If nonparametric, use what we already have. with_replacement only affects this.
	If parametric, use the method in section 3.3 in Hennig
		An additional argument should be added to clustomit_landon that is a RNG function that matches the
			criteria in 'boot'
		If it is NULL, we use the one in Hennig.
		This should allow additional support for other types of parametric bootstrapping/jittering
			such as the one we used in the original paper.

Once I figure out what a good value for B (the bootstrap replicates) is, update the default values
	for each of the clustomit functions




Add more documentation to clustomit_boot
Add documentation to helper functions.

Make sure the WARNINGS being thrown by the similarity functions is not critical.
	Fix it, if possible.